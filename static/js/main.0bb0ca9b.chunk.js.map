{"version":3,"sources":["components/ui/form/DropdownField.jsx","components/ui/form/TextField.jsx","util/constants.js","components/ui/StatForm.jsx","state/actions/index.js","state/selectors/index.js","components/ComparisonStatForm.jsx","components/ui/form/CheckboxField.jsx","components/ui/ItemStatForm.jsx","components/ComparisonItemStatForm.jsx","components/PlayerItemStatForm.jsx","components/PlayerStatForm.jsx","components/ui/BuffForm.jsx","components/PlayerBuffForm.jsx","components/ComparisonBuffForm.jsx","util/data.js","util/algorithms.js","components/Results.jsx","components/ResetCalculatorButton.jsx","components/ComparisonCopyButton.jsx","App.jsx","serviceWorker.js","util/helpers.js","state/reducers/index.js","index.js","util/stateStorage.js"],"names":["DropdownField","_this","this","react_default","a","createElement","className","props","label","name","value","selected","onChange","Object","keys","values","map","text","key","React","Component","TextField","type","defaultState","player","stats","class","dungeon","wepAtk","bAtk","pbAtk","wepRarity","pierce","pmPierce","pmAtk","tDmg","bDmg","eDmg","mrDmg","critRate","luck","critDmg","item","batkGems","batkGemLvl","mainStatGems","mainStatGemLvl","varrWingsBuff","varrHornsBuff","murpBuff","mslBuff","namedEpic1HBuff","namedEpic2HBuff","namedEpicMHBuff","buffs","sinCritBuff","buffWepAtk","buffEDmg","buffDmg","buffPmAtk","debuffDmgTaken","debuffDefense","comparison","fields","gemQuantities","0","1","2","3","4","5","6","7","8","9","gemLevels","10","classes","knight","wiz","archer","thief","rune","zerk","priest","hg","sin","sb","striker","dungeons","cdev","cmoc","cpap","fd","tdummy","wepRarities","epic","legendary","StatForm","DropdownField_DropdownField","setStats","TextField_TextField","ActionTypes","getComparisonItemStats","state","getComparisonStats","getComparisonBuffs","getPlayerItemStats","getPlayerStats","getPlayerBuffs","connect","dispatch","changeEvent","CheckboxField","checked","ItemStatForm","CheckboxField_CheckboxField","Atk","BuffForm","data","boss","def","pmResis","critEvasion","evasion","petBonusAtkMultiplier","bonusAtkCoefficient","gems","bonusAtk","stat","mainStatToPMAtk","critRateCoefficient","critRateCap","classesWithLuck","varrHornsBuffAvgPmAtk","varrWingsBuffAvgPierce","msl","uptime","dmg","default","murp","namedEpic2HBuffPmAtk","namedEpicMHBuffPmAtk","namedEpic1HBuffPmAtk","sinCritBuffUptime","getDmgDealt","itemStats","totalDmg","totalBonusAtk","totalWepAtk","totalPierce","totalPmAtk","totalDmgMultiplier","bossDefMultiplier","Math","max","min","getAvgDmgDealtWithCrit","getCritRate","dmgDealt","includes","additionalCritRate","Results","playerStats","playerBuffs","playerItem","comparisonDmgDealt","comparisonStats","comparisonBuffs","comparisonItem","isYourDmgHigher","yourDmgInc","abs","toFixed","comparisonDmgInc","avgDmgDealtWithCrit","avgComparisonDmgDealtWithCrit","isYourAvgDmgHigher","yourAvgDmgInc","comparisonAvgDmgInc","comparisonCritRate","isCritSame","ResetCalculatorButton","onClick","resetState","ComparisonCopyButton","setPlayerStatsToComparisonStats","App","PlayerStatForm","PlayerBuffForm","PlayerItemStatForm","ComparisonStatForm","ComparisonBuffForm","ComparisonItemStatForm","components_ComparisonCopyButton","components_Results","components_ResetCalculatorButton","Boolean","window","location","hostname","match","LAST_CHARACTER_PERIOD_REGEX","getValue","eventTarget","val","isNaN","test","length","parseFloat","reducers","combineReducers","comparisonState","arguments","undefined","action","objectSpread","defineProperty","target","playerState","store","createStore","JSON","parse","localStorage","getItem","e","getSavedState","subscribe","getState","setItem","stringify","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0bb0ca9b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class DropdownField extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"input\">\r\n                <label>{this.props.label}</label>\r\n                <select name={this.props.name} value={this.props.selected} onChange={this.props.onChange}>\r\n                    {Object.keys(this.props.values).map(\r\n                        (value) => {\r\n                            const text = this.props.values[value];\r\n                            return (<option key={text} value={value}>{text}</option>);\r\n                        }\r\n                    )}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class TextField extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"input\">\r\n                <label>{this.props.label}</label>\r\n                <input type=\"text\" name={this.props.name} value={this.props.value} onChange={this.props.onChange} />\r\n            </div>\r\n        );\r\n    }\r\n}","export const defaultState = {\r\n    player: {\r\n        stats: {\r\n            class: 'knight',\r\n            dungeon: 'cdev',\r\n            wepAtk: 2000,\r\n            bAtk: 0,\r\n            pbAtk: 0,\r\n            wepRarity: 'epic',\r\n            pierce: 5,\r\n            pmPierce: 5,\r\n            pmAtk: 300,\r\n            tDmg: 0,\r\n            bDmg: 0,\r\n            eDmg: 0,\r\n            mrDmg: 0,\r\n            critRate: 50,\r\n            luck: 20,\r\n            critDmg: 125,\r\n        },\r\n        item: {\r\n            batkGems: 0,\r\n            batkGemLvl: 10,\r\n            mainStatGems: 0,\r\n            mainStatGemLvl: 10,\r\n            varrWingsBuff: false,\r\n            varrHornsBuff: false,\r\n            murpBuff: false,\r\n            mslBuff: false,\r\n            namedEpic1HBuff: false,\r\n            namedEpic2HBuff: false,\r\n            namedEpicMHBuff: false,\r\n        },\r\n        buffs: {\r\n            sinCritBuff: false,\r\n            buffWepAtk: 0,\r\n            buffEDmg: 0,\r\n            buffDmg: 0,\r\n            buffPmAtk: 0,\r\n            debuffDmgTaken: 0,\r\n            debuffDefense: 0,\r\n        }\r\n    },\r\n    comparison: {\r\n        stats: {\r\n            class: 'knight',\r\n            dungeon: 'cdev',\r\n            wepAtk: 2000,\r\n            bAtk: 0,\r\n            pbAtk: 0,\r\n            wepRarity: 'epic',\r\n            pierce: 5,\r\n            pmPierce: 5,\r\n            pmAtk: 300,\r\n            tDmg: 0,\r\n            bDmg: 0,\r\n            eDmg: 0,\r\n            mrDmg: 0,\r\n            critRate: 50,\r\n            luck: 20,\r\n            critDmg: 125,\r\n        },\r\n        item: {\r\n            batkGems: 0,\r\n            batkGemLvl: 10,\r\n            mainStatGems: 0,\r\n            mainStatGemLvl: 10,\r\n            varrWingsBuff: false,\r\n            varrHornsBuff: false,\r\n            murpBuff: false,\r\n            mslBuff: false,\r\n            namedEpic1HBuff: false,\r\n            namedEpic2HBuff: false,\r\n            namedEpicMHBuff: false,\r\n        },\r\n        buffs: {\r\n            sinCritBuff: false,\r\n            buffWepAtk: 0,\r\n            buffEDmg: 0,\r\n            buffDmg: 0,\r\n            buffPmAtk: 0,\r\n            debuffDmgTaken: 0,\r\n            debuffDefense: 0,\r\n        }\r\n    }\r\n};\r\n\r\nexport const fields = {\r\n    class: 'class',\r\n    dungeon: 'dungeon',\r\n    wepAtk: 'wepAtk',\r\n    bAtk: 'bAtk',\r\n    pbAtk: 'pbAtk',\r\n    wepRarity: 'wepRarity',\r\n    pierce: 'pierce',\r\n    pmPierce: 'pmPierce',\r\n    pmAtk: 'pmAtk',\r\n    tDmg: 'tDmg',\r\n    bDmg: 'bDmg',\r\n    eDmg: 'eDmg',\r\n    mrDmg: 'mrDmg',\r\n    critRate: 'critRate',\r\n    critDmg: 'critDmg',\r\n    luck: 'luck',\r\n    batkGems: 'batkGems',\r\n    batkGemLvl: 'batkGemLvl',\r\n    mainStatGems: 'mainStatGems',\r\n    mainStatGemLvl: 'mainStatGemLvl',\r\n    sinCritBuff: 'sinCritBuff',\r\n    buffWepAtk: 'buffWepAtk',\r\n    buffEDmg: 'buffEDmg',\r\n    buffDmg: 'buffDmg',\r\n    buffPmAtk: 'buffPmAtk',\r\n    debuffDmgTaken: 'debuffDmgTaken',\r\n    debuffDefense: 'debuffDefense',\r\n    varrWingsBuff: 'varrWingsBuff',\r\n    varrHornsBuff: 'varrHornsBuff',\r\n    murpBuff: 'murpBuff',\r\n    mslBuff: 'mslBuff',\r\n    namedEpic1HBuff: 'namedEpic1HBuff',\r\n    namedEpic2HBuff: 'namedEpic2HBuff',\r\n    namedEpicMHBuff: 'namedEpicMHBuff',\r\n};\r\n\r\nexport const gemQuantities = {\r\n    0: 0,\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    9: 9,\r\n};\r\n\r\nexport const gemLevels = {\r\n    1: 1,\r\n    2: 2,\r\n    3: 3,\r\n    4: 4,\r\n    5: 5,\r\n    6: 6,\r\n    7: 7,\r\n    8: 8,\r\n    9: 9,\r\n    10: 10,\r\n};\r\n\r\nexport const comparisonTypes = {\r\n    add: 'Add Stats',\r\n    replace: 'Replace All Stats'\r\n}\r\n\r\nexport const classes = {\r\n    knight: 'Knight',\r\n    wiz: 'Wizard',\r\n    archer: 'Archer',\r\n    thief: 'Thief',\r\n    rune: 'Runeblade',\r\n    zerk: 'Berserker',\r\n    priest: 'Priest',\r\n    hg: 'Heavy Gunner',\r\n    sin: 'Assassin',\r\n    sb: 'Soul Binder',\r\n    striker: 'Striker',\r\n};\r\n\r\nexport const dungeons = {\r\n    cdev: 'Shadow Altar',\r\n    cmoc: 'Moonlight Fortress',\r\n    cpap: 'Ludibrium Clock Tower',\r\n    fd: 'The Fire Dragon',\r\n    tdummy: 'Training Dummy',\r\n};\r\n\r\nexport const wepRarities = {\r\n    epic: 'Epic',\r\n    legendary: 'Legendary',\r\n};","import React from 'react';\r\nimport DropdownField from './form/DropdownField';\r\nimport TextField from './form/TextField';\r\nimport { fields, classes, dungeons, wepRarities } from '../../util/constants';\r\n\r\nexport default class StatForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"player-stats stat-form\">\r\n                <fieldset>\r\n                    <DropdownField label=\"Class\" name={fields.class} selected={this.props.values[fields.class]} values={classes} onChange={this.props.setStats} />\r\n                    <DropdownField label=\"Dungeon\" name={fields.dungeon} selected={this.props.values[fields.dungeon]} values={dungeons} onChange={this.props.setStats} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <TextField label=\"Weapon Attack\" name={fields.wepAtk} value={this.props.values[fields.wepAtk]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Bonus Attack*\" name={fields.bAtk} value={this.props.values[fields.bAtk]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Pet Bonus Attack\" name={fields.pbAtk} value={this.props.values[fields.pbAtk]} onChange={this.props.setStats} />\r\n                    <DropdownField label=\"Weapon Rarity\" name={fields.wepRarity} selected={this.props.values[fields.wepRarity]} values={wepRarities} onChange={this.props.setStats} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <TextField label=\"Pierce %\" name={fields.pierce} value={this.props.values[fields.pierce]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Phys/Mag Pierce %\" name={fields.pmPierce} value={this.props.values[fields.pmPierce]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Phys/Mag Attack\" name={fields.pmAtk} value={this.props.values[fields.pmAtk]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Total Damage %\" name={fields.tDmg} value={this.props.values[fields.tDmg]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Boss Damage %\" name={fields.bDmg} value={this.props.values[fields.bDmg]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Elemental Damage %\" name={fields.eDmg} value={this.props.values[fields.eDmg]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Melee/Ranged Damage %\" name={fields.mrDmg} value={this.props.values[fields.mrDmg]} onChange={this.props.setStats} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <TextField label=\"Critical Rate**\" name={fields.critRate} value={this.props.values[fields.critRate]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Critical Damage\" name={fields.critDmg} value={this.props.values[fields.critDmg]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Luck\" name={fields.luck} value={this.props.values[fields.luck]} onChange={this.props.setStats} />\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}","export const ActionTypes = {\r\n    SET_PLAYER_STATS: 'SET_PLAYER_STATS',\r\n    SET_PLAYER_ITEM_STATS: 'SET_PLAYER_ITEM_STATS',\r\n    SET_PLAYER_BUFFS: 'SET_PLAYER_BUFFS',\r\n    SET_COMPARISON_STATS: 'SET_COMPARISON_STATS',\r\n    SET_COMPARISON_ITEM_STATS: 'SET_COMPARISON_ITEM_STATS',\r\n    SET_COMPARISON_BUFFS: 'SET_COMPARISON_BUFFS',\r\n    REPLACE_COMPARISON_STATS_WITH_PLAYER_STATS: 'REPLACE_COMPARISON_STATS_WITH_PLAYER_STATS',\r\n    RESET_STATE: 'RESET_STATE',\r\n}\r\n\r\nexport const setPlayerStats = (changeEvent) => {\r\n    return {\r\n        type: ActionTypes.SET_PLAYER_STATS,\r\n        changeEvent,\r\n    };\r\n};\r\n\r\nexport const setPlayerItemStats = (changeEvent) => {\r\n    return {\r\n        type: ActionTypes.SET_PLAYER_ITEM_STATS,\r\n        changeEvent,\r\n    };\r\n};\r\n\r\nexport const setPlayerBuffs = (changeEvent) => {\r\n    return {\r\n        type: ActionTypes.SET_PLAYER_BUFFS,\r\n        changeEvent,\r\n    };\r\n};\r\n\r\nexport const setComparisonStats = (changeEvent) => {\r\n    return {\r\n        type: ActionTypes.SET_COMPARISON_STATS,\r\n        changeEvent,\r\n    };\r\n};\r\n\r\nexport const setComparisonItemStats = (changeEvent) => {\r\n    return {\r\n        type: ActionTypes.SET_COMPARISON_ITEM_STATS,\r\n        changeEvent,\r\n    };\r\n};\r\n\r\nexport const setComparisonBuffs = (changeEvent) => {\r\n    return {\r\n        type: ActionTypes.SET_COMPARISON_BUFFS,\r\n        changeEvent,\r\n    };\r\n};\r\n\r\nexport const setPlayerStatsToComparisonStats = () => {\r\n    return {\r\n        type: ActionTypes.REPLACE_COMPARISON_STATS_WITH_PLAYER_STATS,\r\n    };\r\n};\r\n\r\nexport const resetState = () => {\r\n    return {\r\n        type: ActionTypes.RESET_STATE,\r\n    };\r\n};","export const getComparisonItemStats = (state) => {\r\n    return state.comparison.item;\r\n};\r\n\r\nexport const getComparisonStats = (state) => {\r\n    return state.comparison.stats;\r\n};\r\n\r\nexport const getComparisonBuffs = (state) => {\r\n    return state.comparison.buffs;\r\n};\r\n\r\nexport const getPlayerItemStats = (state) => {\r\n    return state.player.item;\r\n};\r\n\r\nexport const getPlayerStats = (state) => {\r\n    return state.player.stats;\r\n};\r\n\r\nexport const getPlayerBuffs = (state) => {\r\n    return state.player.buffs;\r\n};\r\n\r\nexport const getComparisonType = (state) => {\r\n    return state.comparisonType;\r\n};","import { connect } from 'react-redux'\r\nimport StatForm  from './ui/StatForm';\r\nimport { setComparisonStats } from '../state/actions';\r\nimport { getComparisonStats } from '../state/selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n    values: getComparisonStats(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setStats: stats => dispatch(setComparisonStats(stats)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StatForm);","import React from 'react';\r\n\r\nexport default class CheckboxField extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"input\">\r\n                <label>{this.props.label}</label>\r\n                <input type=\"checkbox\" name={this.props.name} checked={this.props.value} onChange={this.props.onChange} />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport DropdownField from './form/DropdownField';\r\nimport CheckboxField from './form/CheckboxField';\r\nimport { fields, gemQuantities, gemLevels } from '../../util/constants';\r\n\r\nexport default class ItemStatForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"item-stats stat-form\">\r\n                <fieldset>\r\n                    <CheckboxField label=\"MSL Weapon (Average +Damage)****\" name={fields.mslBuff} value={this.props.values[fields.mslBuff]} onChange={this.props.setStats} />\r\n                    <CheckboxField label=\"Murp Weapon (Average +Phys/Mag Atk)\" name={fields.murpBuff} value={this.props.values[fields.murpBuff]} onChange={this.props.setStats} />\r\n                    <CheckboxField label=\"Named Epic 2H Orb Buff (Average +Phys/Mag Atk)\" name={fields.namedEpic2HBuff} value={this.props.values[fields.namedEpic2HBuff]} onChange={this.props.setStats} />\r\n                    <CheckboxField label=\"Named Epic 1H Buff (Average +Phys/Mag Atk)\" Atk name={fields.namedEpic1HBuff} value={this.props.values[fields.namedEpic1HBuff]} onChange={this.props.setStats} />\r\n                    <CheckboxField label=\"Named Epic Main-hand Buff (Average +Phys/Mag Atk)\" Atk name={fields.namedEpicMHBuff} value={this.props.values[fields.namedEpicMHBuff]} onChange={this.props.setStats} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <CheckboxField label=\"Varrakent's Wings (Average +Piercing)\" name={fields.varrWingsBuff} value={this.props.values[fields.varrWingsBuff]} onChange={this.props.setStats} />\r\n                    <CheckboxField label=\"Varrakent's Horns (Average +Phys/Mag Atk)\" name={fields.varrHornsBuff} value={this.props.values[fields.varrHornsBuff]} onChange={this.props.setStats} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <DropdownField label=\"# of Additional Bonus Atk Gems\" name={fields.batkGems} selected={this.props.values[fields.batkGems]} values={gemQuantities} onChange={this.props.setStats} />\r\n                    <DropdownField label=\"Bonus Atk Gem Level\" name={fields.batkGemLvl} selected={this.props.values[fields.batkGemLvl]} values={gemLevels} onChange={this.props.setStats} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <DropdownField label=\"# of Additional Main Stat Gems\" name={fields.mainStatGems} selected={this.props.values[fields.mainStatGems]} values={gemQuantities} onChange={this.props.setStats} />\r\n                    <DropdownField label=\"Main Stat Gem Level\" name={fields.mainStatGemLvl} selected={this.props.values[fields.mainStatGemLvl]} values={gemLevels} onChange={this.props.setStats} />\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport ItemStatForm from './ui/ItemStatForm';\r\nimport { setComparisonItemStats } from '../state/actions';\r\nimport { getComparisonItemStats } from '../state/selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n    values: getComparisonItemStats(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setStats: stats => dispatch(setComparisonItemStats(stats)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ItemStatForm);","import { connect } from 'react-redux'\r\nimport ItemStatForm from './ui/ItemStatForm';\r\nimport { setPlayerItemStats } from '../state/actions';\r\nimport { getPlayerItemStats } from '../state/selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n    values: getPlayerItemStats(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setStats: stats => dispatch(setPlayerItemStats(stats)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ItemStatForm);","import { connect } from 'react-redux'\r\nimport StatForm from './ui/StatForm';\r\nimport { setPlayerStats } from '../state/actions';\r\nimport { getPlayerStats } from '../state/selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n    values: getPlayerStats(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setStats: stats => dispatch(setPlayerStats(stats)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StatForm);","import React from 'react';\r\nimport TextField from './form/TextField';\r\nimport CheckboxField from './form/CheckboxField';\r\nimport { fields } from '../../util/constants';\r\n\r\nexport default class ItemStatForm extends React.Component {\r\n    render() {\r\n        return <div className=\"buff-stats stat-form\">\r\n            <fieldset>\r\n                <CheckboxField label=\"Assassin Crit Rate Buff\" name={fields.sinCritBuff} value={this.props.values[fields.sinCritBuff]} onChange={this.props.setStats} />\r\n            </fieldset>\r\n            <fieldset>\r\n                <TextField label=\"Weapon Attack Buff %\" name={fields.buffWepAtk} value={this.props.values[fields.buffWepAtk]} onChange={this.props.setStats} />\r\n                <TextField label=\"Elemental Damage Buff %\" name={fields.buffEDmg} value={this.props.values[fields.buffEDmg]} onChange={this.props.setStats} />\r\n                <TextField label=\"Damage Buff %\" name={fields.buffDmg} value={this.props.values[fields.buffDmg]} onChange={this.props.setStats} />\r\n                <TextField label=\"Physical/Magical Attack Buff %\" name={fields.buffPmAtk} value={this.props.values[fields.buffPmAtk]} onChange={this.props.setStats} />\r\n            </fieldset>\r\n            <fieldset>\r\n                <TextField label=\"Increase Damage Taken Debuff %***\" name={fields.debuffDmgTaken} value={this.props.values[fields.debuffDmgTaken]} onChange={this.props.setStats} />\r\n                <TextField label=\"Decrease Defense Debuff %\" name={fields.debuffDefense} value={this.props.values[fields.debuffDefense]} onChange={this.props.setStats} />\r\n            </fieldset>\r\n        </div>;\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport BuffForm from './ui/BuffForm';\r\nimport { setPlayerBuffs } from '../state/actions';\r\nimport { getPlayerBuffs } from '../state/selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n    values: getPlayerBuffs(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setStats: stats => dispatch(setPlayerBuffs(stats)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BuffForm);","import { connect } from 'react-redux'\r\nimport BuffForm from './ui/BuffForm';\r\nimport { setComparisonBuffs } from '../state/actions';\r\nimport { getComparisonBuffs } from '../state/selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n    values: getComparisonBuffs(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setStats: stats => dispatch(setComparisonBuffs(stats)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BuffForm);","export default {\r\n    boss: { // Info from English MS2 Wiki, is datamined\r\n        fd: {\r\n            // Appears to be the higher def one, not lower def one on wiki. 23000011 has hidden HP stat that matches our hard mode FD\r\n            name: 'Pyrros Fard',\r\n            def: 681,\r\n            pmResis: 120,\r\n            critEvasion: 50,\r\n            evasion: 97,\r\n            luck: 0,\r\n        },\r\n        cdev: {\r\n            name: 'Devorak',\r\n            def: 681,\r\n            pmResis: 249,\r\n            critEvasion: 50,\r\n            evasion: 98,\r\n            luck: 0,\r\n        },\r\n        cmoc: {\r\n            name: 'Captain Moc',\r\n            def: 681,\r\n            pmResis: 249,\r\n            critEvasion: 50,\r\n            evasion: 98,\r\n            luck: 0,\r\n        },\r\n        cpap: {\r\n            name: 'Papulatus',\r\n            def: 936,\r\n            pmResis: 249,\r\n            critEvasion: 50,\r\n            evasion: 101,\r\n            luck: 0,\r\n        },\r\n        tdummy: {\r\n            name: 'Training Dummy',\r\n            def: 567,\r\n            pmResis: 90,\r\n            critEvasion: 50,\r\n            evasion: 87,\r\n            luck: 0\r\n        }\r\n    },\r\n    petBonusAtkMultiplier: 0.4, // Amount of pet bonus atk that affects your bonus atk, came from Saintone\r\n    bonusAtkCoefficient: { // Coefficient may different slightly depending on wep type, ignoring for now until we have more certain data\r\n        epic: { // From https://docs.google.com/document/d/1h3kmoDic7x8VldqJ2DxxXgwTI674Ft-riEKXY3SnJuU/edit\r\n            knight: 2,\r\n            wiz: 2.5, // Void found this to be roughly 2.75, changed to 2.5 to match pattern of epic coeff = 1/2 of legendary coeffs, TODO: Needs more testing\r\n            archer: 2.5,\r\n            thief: 2.25,\r\n            rune: 2.5,\r\n            zerk: 2.5,\r\n            priest: 2,\r\n            hg: 2.5,\r\n            sin: 2.25,\r\n            sb: 2.5,\r\n            striker: 2.5,\r\n        },\r\n        legendary: { // Came from Saintsone\r\n            knight: 4,\r\n            wiz: 5,\r\n            archer: 5,\r\n            thief: 4.5,\r\n            rune: 5,\r\n            zerk: 5,\r\n            priest: 4,\r\n            hg: 5,\r\n            sin: 4.5,\r\n            sb: 5,\r\n            striker: 5,\r\n        }\r\n    },\r\n    gems: { // From https://docs.google.com/document/d/1h3kmoDic7x8VldqJ2DxxXgwTI674Ft-riEKXY3SnJuU/edit\r\n        bonusAtk: {\r\n            1: 30,\r\n            2: 55,\r\n            3: 75,\r\n            4: 95,\r\n            5: 115,\r\n            6: 130,\r\n            7: 145,\r\n            8: 160,\r\n            9: 170,\r\n            10: 180,\r\n        },\r\n        stat: {\r\n            1: 2,\r\n            2: 4,\r\n            3: 7,\r\n            4: 10,\r\n            5: 13,\r\n            6: 16,\r\n            7: 20,\r\n            8: 25,\r\n            9: 30,\r\n            10: 36,\r\n        },\r\n    },\r\n    mainStatToPMAtk: { // From https://www.meowuniverse.com/stats\r\n        knight: 0.62249,\r\n        wiz: 0.5665,\r\n        archer: 0.62249,\r\n        thief: 0.62249,\r\n        rune: 0.62249,\r\n        zerk: 0.62249,\r\n        priest: 0.4704,\r\n        hg: 0.62249,\r\n        sin: 0.62249,\r\n        sb: 0.5665, // TODO: Guessing, can confirm upon release\r\n        striker: 0.62249, // TODO: Guessing, can confirm upon release\r\n    },\r\n    critRateCoefficient: { // Datamined\r\n        knight: 3.78,\r\n        zerk: 4.305,\r\n        wiz: 3.40375,\r\n        priest: 7.34125,\r\n        archer: 6.4575,\r\n        hg: 2.03875,\r\n        thief: 0.60375,\r\n        sin: 0.55125,\r\n        rune: 3.78,\r\n        striker: 2.03875,\r\n        sb: 3.40375,\r\n    },\r\n    critRateCap: 0.4,\r\n    classesWithLuck: ['sin', 'thief'], // Classes with luck main stat. Used to calculate additional crit rate\r\n    item: {\r\n        varrHornsBuffAvgPmAtk: 11.5 * 8 / 24,\r\n        varrWingsBuffAvgPierce: 10 * 8 / 24,\r\n        msl: {\r\n            uptime: 20/24,\r\n            dmg: {\r\n                default: 4.5,\r\n                cdev: 4.5 * 4,\r\n                cmoc: 4.5 * 4,\r\n                cpap: 4.5 * 4,\r\n            }\r\n        },\r\n        murp: {\r\n            uptime: 11/24,\r\n            pmAtk: {\r\n                default: 9,\r\n                cdev: 9 * 4,\r\n                cmoc: 9 * 4,\r\n                cpap: 9 * 4,\r\n            },\r\n        },\r\n        namedEpic2HBuffPmAtk: 22 * 30 / 45,\r\n        namedEpicMHBuffPmAtk: 17 * 30 / 45,\r\n        namedEpic1HBuffPmAtk: 11 * 30 / 45,\r\n    },\r\n    buffs: {\r\n        sinCritBuffUptime: 17 / 60,\r\n    },\r\n};","import data from './data';\r\n\r\n// There's likely some sort of missing coefficient on defense, as the final calculated number is ~4-5x less than what your dama ge is ingame\r\n// Info mostly from KR tests\r\nexport const getDmgDealt = (player) => {\r\n    const stats = player.stats;\r\n    const buffs = player.buffs;\r\n    const itemStats = player.item;\r\n\r\n    const bonusAtkCoefficient = data.bonusAtkCoefficient[stats.wepRarity][stats.class];\r\n    const totalDmg = stats.tDmg + stats.bDmg + stats.eDmg + stats.mrDmg + buffs.buffEDmg;\r\n    const totalBonusAtk = stats.bAtk + (stats.pbAtk * data.petBonusAtkMultiplier) + (itemStats.batkGems * data.gems.bonusAtk[itemStats.batkGemLvl]);\r\n    const totalWepAtk = (stats.wepAtk + (totalBonusAtk * bonusAtkCoefficient)) * (1 + (buffs.buffWepAtk / 100));\r\n    const totalPierce = stats.pierce + (itemStats.varrWingsBuff ? data.item.varrWingsBuffAvgPierce : 0);\r\n    const totalPmAtk = (stats.pmAtk\r\n        + (itemStats.mainStatGems * data.gems.stat[itemStats.mainStatGemLvl] * data.mainStatToPMAtk[stats.class]))\r\n        * (1 + ((\r\n            buffs.buffPmAtk\r\n            + (itemStats.varrHornsBuff ? data.item.varrHornsBuffAvgPmAtk : 0)\r\n            + (itemStats.murpBuff ? (data.item.murp.pmAtk[stats.dungeon] || data.item.murp.pmAtk.default) * data.item.murp.uptime : 0)\r\n            + (itemStats.namedEpic1HBuff ? data.item.namedEpic1HBuffPmAtk : 0)\r\n            + (itemStats.namedEpic2HBuff ? data.item.namedEpic2HBuffPmAtk : 0)\r\n            + (itemStats.namedEpicMHBuff ? data.item.namedEpicMHBuffPmAtk : 0)\r\n        ) / 100));\r\n\r\n    const totalDmgMultiplier = (1 + (totalDmg / 100));\r\n    const bossDefMultiplier = 1 / (data.boss[stats.dungeon].def * (1 - (buffs.debuffDefense / 100)));\r\n    const pierceMultiplier = (1 / Math.max(1 - (totalPierce / 100), 0.7));\r\n    const pmPierceResisMultiplier = Math.min(1, ((1500 * (1 + (stats.pmPierce / 100)) - data.boss[stats.dungeon].pmResis) / 1500));\r\n    const buffMultiplier = (1 + ((buffs.buffDmg\r\n            + buffs.debuffDmgTaken\r\n            + (itemStats.mslBuff ? (data.item.msl.dmg[stats.dungeon] || data.item.msl.dmg.default) * data.item.msl.uptime : 0)\r\n        ) / 100));\r\n\r\n    return totalWepAtk\r\n        * totalPmAtk\r\n        * totalDmgMultiplier\r\n        * pierceMultiplier\r\n        * pmPierceResisMultiplier\r\n        * buffMultiplier\r\n        * bossDefMultiplier;\r\n};\r\n\r\nexport const getAvgDmgDealtWithCrit = (player) => {\r\n    const critRate = getCritRate(player);\r\n    const dmgDealt = getDmgDealt(player);\r\n    const critDmg = player.stats.critDmg;\r\n    return ((dmgDealt * (1 - critRate)) + (dmgDealt * critRate * (critDmg / 100))) / 2;\r\n};\r\n\r\n// Algorithm datamined from client\r\nexport const getCritRate = (player) => {\r\n    const stats = player.stats;\r\n    const buffs = player.buffs;\r\n    const itemStats = player.item;\r\n    const finalLuck = stats.luck + (data.classesWithLuck.includes(stats.class) ? itemStats.mainStatGems * data.gems.stat[itemStats.mainStatGemLvl] : 0);\r\n    const critRate = ((finalLuck * data.critRateCoefficient[stats.class]) + (stats.critRate * 5.3)) / (data.boss[stats.dungeon].critEvasion * 2) * 0.015;\r\n    const additionalCritRate = (buffs.sinCritBuff ? data.buffs.sinCritBuffUptime : 0);\r\n    return Math.min(critRate + additionalCritRate, data.critRateCap);\r\n}","import { connect } from 'react-redux'\r\nimport React from 'react';\r\nimport { getPlayerStats, getPlayerBuffs, getPlayerItemStats, getComparisonStats, getComparisonBuffs, getComparisonItemStats } from '../state/selectors';\r\nimport { getDmgDealt, getCritRate, getAvgDmgDealtWithCrit } from '../util/algorithms';\r\n\r\nclass Results extends React.Component {\r\n    render() {\r\n        const dmgDealt = getDmgDealt({\r\n            stats: this.props.playerStats,\r\n            buffs: this.props.playerBuffs,\r\n            item: this.props.playerItem,\r\n        });\r\n        const comparisonDmgDealt = getDmgDealt({\r\n            stats: this.props.comparisonStats,\r\n            buffs: this.props.comparisonBuffs,\r\n            item: this.props.comparisonItem,\r\n        });\r\n        const isYourDmgHigher = dmgDealt > comparisonDmgDealt;\r\n        const yourDmgInc = (Math.abs(1 - (dmgDealt / comparisonDmgDealt)) * 100).toFixed(2);\r\n        const comparisonDmgInc = (Math.abs(1 - (comparisonDmgDealt / dmgDealt)) * 100).toFixed(2);\r\n\r\n        const avgDmgDealtWithCrit = getAvgDmgDealtWithCrit({\r\n            stats: this.props.playerStats,\r\n            buffs: this.props.playerBuffs,\r\n            item: this.props.playerItem,\r\n        });\r\n        const avgComparisonDmgDealtWithCrit = getAvgDmgDealtWithCrit({\r\n            stats: this.props.comparisonStats,\r\n            buffs: this.props.comparisonBuffs,\r\n            item: this.props.comparisonItem,\r\n        });\r\n        const isYourAvgDmgHigher = avgDmgDealtWithCrit > avgComparisonDmgDealtWithCrit;\r\n        const yourAvgDmgInc = (Math.abs(1 - (avgDmgDealtWithCrit / avgComparisonDmgDealtWithCrit)) * 100).toFixed(2);\r\n        const comparisonAvgDmgInc = (Math.abs(1 - (avgComparisonDmgDealtWithCrit / avgDmgDealtWithCrit)) * 100).toFixed(2);\r\n\r\n        const critRate = (getCritRate({\r\n            stats: this.props.playerStats,\r\n            buffs: this.props.playerBuffs,\r\n            item: this.props.playerItem,\r\n        }) * 100).toFixed(2);\r\n        const comparisonCritRate = (getCritRate({\r\n            stats: this.props.comparisonStats,\r\n            buffs: this.props.comparisonBuffs,\r\n            item: this.props.comparisonItem,\r\n        }) * 100).toFixed(2);\r\n        const isCritSame = critRate !== comparisonCritRate;\r\n        return (\r\n            <div className=\"results\">\r\n                <div>Your Damage: {yourDmgInc}% {isYourDmgHigher ? 'higher' : 'lower'} than Comparison</div>\r\n                {yourAvgDmgInc !== yourDmgInc ? (<div>Your Average Dmg Dealt w/ Crit: {yourAvgDmgInc}% {isYourAvgDmgHigher ? 'higher' : 'lower'} than Comparison</div>) : ''}\r\n                <div>Comparison Damage: {comparisonDmgInc}% {isYourDmgHigher ? 'lower' : 'higher'} than Yours</div>\r\n                {comparisonAvgDmgInc !== comparisonDmgInc ? (<div>Comparison Average Dmg Dealt w/ Crit: {comparisonAvgDmgInc}% {isYourAvgDmgHigher ? 'lower' : 'higher'} than Yours</div>) : ''}\r\n                <div>{isCritSame ? 'Your ' : ''}Crit Rate: {critRate}%</div>\r\n                {isCritSame ? (<div>Comparison Crit Rate: {comparisonCritRate}%</div>) : ''}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    playerStats: getPlayerStats(state),\r\n    playerBuffs: getPlayerBuffs(state),\r\n    playerItem: getPlayerItemStats(state),\r\n    comparisonStats: getComparisonStats(state),\r\n    comparisonBuffs: getComparisonBuffs(state),\r\n    comparisonItem: getComparisonItemStats(state),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(Results);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { resetState } from '../state/actions';\r\n\r\nclass ResetCalculatorButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <button className=\"reset-calc btn\" onClick={this.props.resetState}>\r\n                Reset Calculator\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    resetState: () => dispatch(resetState()),\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps,\r\n)(ResetCalculatorButton);","import React from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { setPlayerStatsToComparisonStats } from '../state/actions';\r\n\r\nclass ComparisonCopyButton extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"comparison-btn\">\r\n                <button onClick={this.props.setPlayerStatsToComparisonStats}>Copy Your Stats to Comparison Stats</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setPlayerStatsToComparisonStats: () => dispatch(setPlayerStatsToComparisonStats()),\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps,\r\n)(ComparisonCopyButton);","import React from 'react';\r\nimport ComparisonStatForm from './components/ComparisonStatForm';\r\nimport ComparisonItemStatForm from './components/ComparisonItemStatForm';\r\nimport PlayerItemStatForm from './components/PlayerItemStatForm';\r\nimport PlayerStatForm from './components/PlayerStatForm';\r\nimport PlayerBuffForm from './components/PlayerBuffForm';\r\nimport ComparisonBuffForm from './components/ComparisonBuffForm';\r\nimport Results from './components/Results';\r\nimport ResetCalculatorButton from './components/ResetCalculatorButton';\r\nimport ComparisonCopyButton from './components/ComparisonCopyButton';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <div className=\"calc\">\r\n                    <div className=\"player col\">\r\n                        <div className=\"form-container\">\r\n                            <h1>Your Stats</h1>\r\n                            <PlayerStatForm />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <h1>Your Buffs</h1>\r\n                            <PlayerBuffForm />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <h1>Your Item Stats</h1>\r\n                            <PlayerItemStatForm />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"comparison col\">\r\n                        <div className=\"form-container\">\r\n                            <h1>Comparison Stats</h1>\r\n                            <ComparisonStatForm />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <h1>Comparison Buffs</h1>\r\n                            <ComparisonBuffForm />\r\n                        </div>\r\n                        <div className=\"form-container\">\r\n                            <h1>Comparison Item Stats</h1>\r\n                            <ComparisonItemStatForm />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"floating-footer\">\r\n                    <ComparisonCopyButton />\r\n                    <Results />\r\n                </div>\r\n                <div className=\"fineprint\">\r\n                    *<b>Bonus Attack</b> is experimental. The weapon multipliers may or may not be slightly inaccurate.\r\n                    <br/>**<b>Critical Rate</b> is experimental. The datamined algorithm may or may not be slightly inaccurate.\r\n                    <br/>***<b>Increase Damage Taken Debuff %</b> is experimental. It may or may not be slightly inaccurate. We aren't certain exactly how it interacts with Damage Buff %.\r\n                    <br/>****<b>MSL weapon physical/magical damage buff exact calculation is unknown.</b> It's unknown exactly what \"physical/magical damage\" means. We make the assumption it acts as a raw damage buff, but it may just act as a hidden modifier to phys/mag attack.\r\n                </div>\r\n                <ResetCalculatorButton />\r\n                <div className=\"fineprint\">\r\n                    Last updated December 28th, 2018\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// If the last character in the value is a period, the user is in the middle of typing a number with a decimal\r\nconst LAST_CHARACTER_PERIOD_REGEX = /.*\\.$/;\r\n\r\n// If checkbox, return bool for checked\r\n// If text input or dropdown, return value as float(isNaN == true) or text(isNaN == false)\r\nexport const getValue = (eventTarget) => {\r\n    const val = eventTarget.value;\r\n    const isCheckbox = eventTarget.type === 'checkbox';\r\n    return isCheckbox\r\n        ? eventTarget.checked\r\n        : isNaN(val) || LAST_CHARACTER_PERIOD_REGEX.test(val) || val.length === 0 ? val : parseFloat(val);\r\n};","import { combineReducers } from 'redux';\r\nimport { ActionTypes } from '../actions';\r\nimport { getValue } from '../../util/helpers';\r\nimport { defaultState } from '../../util/constants';\r\n\r\nconst comparisonStatsReducer = (comparisonState = {comparison: { item: {}, stats: {}, buffs: {}}}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SET_COMPARISON_ITEM_STATS:\r\n            return {\r\n                ...comparisonState,\r\n                item: {\r\n                    ...comparisonState.item,\r\n                    [action.changeEvent.target.name]: getValue(action.changeEvent.target),\r\n                }\r\n            };\r\n        case ActionTypes.SET_COMPARISON_STATS:\r\n            return {\r\n                ...comparisonState,\r\n                stats: {\r\n                    ...comparisonState.stats,\r\n                    [action.changeEvent.target.name]: getValue(action.changeEvent.target),\r\n                }\r\n            };\r\n         case ActionTypes.SET_COMPARISON_BUFFS:\r\n            return {\r\n                ...comparisonState,\r\n\t\t\t\tbuffs: {\r\n\t\t\t\t\t...comparisonState.buffs,\r\n\t\t\t\t\t[action.changeEvent.target.name]: getValue(action.changeEvent.target),\r\n\t\t\t\t}\r\n            };\r\n        default:\r\n            return comparisonState;\r\n    }\r\n};\r\n\r\nconst playerStatsReducer = (playerState = {player: { item: {}, stats: {}, buffs: {} }}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SET_PLAYER_ITEM_STATS:\r\n            return {\r\n\t\t\t\t...playerState,\r\n\t\t\t\titem: {\r\n\t\t\t\t\t...playerState.item,\r\n\t\t\t\t\t[action.changeEvent.target.name]: getValue(action.changeEvent.target),\r\n\t\t\t\t}\r\n\t\t\t};\r\n        case ActionTypes.SET_PLAYER_STATS:\r\n            return {\r\n\t\t\t\t...playerState,\r\n\t\t\t\tstats: {\r\n\t\t\t\t\t...playerState.stats,\r\n\t\t\t\t\t[action.changeEvent.target.name]: getValue(action.changeEvent.target),\r\n\t\t\t\t}\r\n            };\r\n        case ActionTypes.SET_PLAYER_BUFFS:\r\n            return {\r\n\t\t\t\t...playerState,\r\n\t\t\t\tbuffs: {\r\n\t\t\t\t\t...playerState.buffs,\r\n\t\t\t\t\t[action.changeEvent.target.name]: getValue(action.changeEvent.target),\r\n\t\t\t\t}\r\n            };\r\n        default:\r\n            return playerState;\r\n    }\r\n};\r\n\r\n// We're using a root reducer so that we can reset our entire state if we want to\r\nconst reducers = combineReducers({\r\n    comparison: comparisonStatsReducer,\r\n    player: playerStatsReducer,\r\n});\r\nexport const reducer = (state, action) => {\r\n    if (action.type === ActionTypes.RESET_STATE) {\r\n        return defaultState;\r\n    }\r\n    if (action.type === ActionTypes.REPLACE_COMPARISON_STATS_WITH_PLAYER_STATS) {\r\n        return {\r\n            ...state,\r\n            comparison: state.player,\r\n        };\r\n    }\r\n\r\n    return reducers(state, action);\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { reducer } from './state/reducers';\nimport { defaultState } from './util/constants';\nimport { saveState, getState as getSavedState } from './util/stateStorage';\n\nconst store = createStore(reducer, getSavedState() || defaultState);\nstore.subscribe(() => {\n    saveState(store.getState());\n});\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const STORAGE_KEY = '_ms2_dps_calc_state'\r\n\r\nexport const getState = () => {\r\n    try {\r\n        return JSON.parse(localStorage.getItem(STORAGE_KEY));\r\n    } catch (e) {}\r\n};\r\n\r\nexport const saveState = (state) => {\r\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(state));\r\n};"],"sourceRoot":""}