{"version":3,"sources":["components/ui/form/DropdownField.jsx","components/ui/form/TextField.jsx","util/constants.js","components/ui/StatForm.jsx","state/actions/index.js","state/selectors/index.js","components/PlayerStatForm.jsx","util/data.js","components/ui/Results.jsx","util/algorithms.js","components/Results.jsx","App.jsx","serviceWorker.js","state/reducers/index.js","index.js"],"names":["DropdownField","react_default","a","createElement","className","this","props","label","name","value","selected","onChange","values","map","key","text","val","React","Component","TextField","type","fields","classes","dungeons","wepRarities","StatForm","DropdownField_DropdownField","setStats","TextField_TextField","ActionTypes","getPlayerStats","state","playerStats","connect","dispatch","stats","changeEvent","data","boss","fd","def","pmResis","critEvasion","evasion","luck","cdev","cmoc","cpap","tdummy","petBonusAtkMultiplier","bonusAtkCoefficient","epic","knight","wiz","archer","thief","rune","zerk","priest","hg","sin","sb","striker","legendary","mainStatToPMAtk","buffs","sinCritBuffUptime","Results","console","log","wepRarity","class","totalDmg","tDmg","bDmg","eDmg","mrDmg","totalWepAtk","wepAtk","bAtk","pbAtk","bossDef","dungeon","pmAtk","Math","max","pierce","min","pmPierce","toLocaleString","e","error","getDamageDealt","ResultsComponent","App","Fragment","PlayerStatForm","components_Results","Boolean","window","location","hostname","match","reducer","combineReducers","comparisonStats","arguments","length","undefined","action","Object","assign","comparison","objectSpread","item","defineProperty","target","player","initialState","store","createStore","ReactDOM","render","es","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ac382b8f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class DropdownField extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"input\">\r\n                <label>{this.props.label}</label>\r\n                <select name={this.props.name} value={this.props.selected} onChange={this.props.onChange}>\r\n                    {this.props.values.map(\r\n                        (value) => (\r\n                            <option key={value.text} value={value.val}>{value.text}</option>\r\n                        )\r\n                    )}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class TextField extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"input\">\r\n                <label>{this.props.label}</label>\r\n                <input type=\"text\" name={this.props.name} value={this.props.value} onChange={this.props.onChange} />\r\n            </div>\r\n        );\r\n    }\r\n}","export const defaultState = {\r\n    playerStats: {\r\n        class: 'knight',\r\n        dungeon: 'cdev',\r\n        wepAtk: '2000',\r\n        bAtk: '0',\r\n        pbAtk: '0',\r\n        wepRarity: 'epic',\r\n        pierce: '5',\r\n        pmPierce: '5',\r\n        pmAtk: '300',\r\n        tDmg: '0',\r\n        bDmg: '0',\r\n        eDmg: '0',\r\n        mrDmg: '0',\r\n    },\r\n};\r\n\r\nexport const fields = {\r\n    class: 'class',\r\n    dungeon: 'dungeon',\r\n    wepAtk: 'wepAtk',\r\n    bAtk: 'bAtk',\r\n    pbAtk: 'pbAtk',\r\n    wepRarity: 'wepRarity',\r\n    pierce: 'pierce',\r\n    pmPierce: 'pmPierce',\r\n    pmAtk: 'pmAtk',\r\n    tDmg: 'tDmg',\r\n    bDmg: 'bDmg',\r\n    eDmg: 'eDmg',\r\n    mrDmg: 'mrDmg',\r\n};\r\n\r\nexport const classes = [\r\n    {\r\n        val: 'knight',\r\n        text: 'Knight',\r\n    },\r\n    {\r\n        val: 'wiz',\r\n        text: 'Wizard',\r\n    },\r\n    {\r\n        val: 'archer',\r\n        text: 'Archer',\r\n    },\r\n    {\r\n        val: 'thief',\r\n        text: 'Thief',\r\n    },\r\n    {\r\n        val: 'rune',\r\n        text: 'Runeblade',\r\n    },\r\n    {\r\n        val: 'zerk',\r\n        text: 'Berserker',\r\n    },\r\n    {\r\n        val: 'priest',\r\n        text: 'Priest',\r\n    },\r\n    {\r\n        val: 'hg',\r\n        text: 'Heavy Gunner',\r\n    },\r\n    {\r\n        text: 'Assassin',\r\n        val: 'sin',\r\n    },\r\n    {\r\n        val: 'sb',\r\n        text: 'Soul Binder',\r\n    },\r\n    {\r\n        val: 'striker',\r\n        text: 'Striker',\r\n    },\r\n];\r\n\r\nexport const dungeons = [\r\n    {\r\n        val: 'cdev',\r\n        text: 'Shadow Altar',\r\n    },\r\n    {\r\n        val: 'cmoc',\r\n        text: 'Moonlight Fortress',\r\n    },\r\n    {\r\n        val: 'cpap',\r\n        text: 'Ludibrium Clock Tower',\r\n    },\r\n    {\r\n        val: 'fd',\r\n        text: 'The Fire Dragon',\r\n    },\r\n    {\r\n        val: 'tdummy',\r\n        text: 'Training Dummy',\r\n    },\r\n];\r\n\r\nexport const wepRarities = [\r\n    {\r\n        val: 'epic',\r\n        text: 'Epic',\r\n    },\r\n    {\r\n        val: 'legendary',\r\n        text: 'Legendary',\r\n    },\r\n];","import React from 'react';\r\nimport DropdownField from './form/DropdownField';\r\nimport TextField from './form/TextField';\r\nimport { fields, classes, dungeons, wepRarities } from '../../util/constants';\r\n\r\nexport default class StatForm extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <fieldset>\r\n                    <DropdownField label=\"Class\" name={fields.class} selected={this.props.values[fields.class]} values={classes} onChange={this.props.setStats} />\r\n                    <DropdownField label=\"Dungeon\" name={fields.dungeon} selected={this.props.values[fields.dungeon]} values={dungeons} onChange={this.props.setStats} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <TextField label=\"Weapon Attack\" name={fields.wepAtk} value={this.props.values[fields.wepAtk]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Bonus Attack\" name={fields.bAtk} value={this.props.values[fields.bAtk]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Pet Bonus Attack\" name={fields.pbAtk} value={this.props.values[fields.pbAtk]} onChange={this.props.setStats} />\r\n                    <DropdownField label=\"Weapon Rarity\" name={fields.wepRarity} selected={this.props.values[fields.wepRarity]} values={wepRarities} onChange={this.props.setStats} />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <TextField label=\"Pierce %\" name={fields.pierce} value={this.props.values[fields.pierce]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Phys/Mag Pierce %\" name={fields.pmPierce} value={this.props.values[fields.pmPierce]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Phys/Mag Attack\" name={fields.pmAtk} value={this.props.values[fields.pmAtk]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Total Damage %\" name={fields.tDmg} value={this.props.values[fields.tDmg]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Boss Damage %\" name={fields.bDmg} value={this.props.values[fields.bDmg]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Elemental Damage %\" name={fields.eDmg} value={this.props.values[fields.eDmg]} onChange={this.props.setStats} />\r\n                    <TextField label=\"Melee/Ranged Damage %\" name={fields.mrDmg} value={this.props.values[fields.mrDmg]} onChange={this.props.setStats} />\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}","export const ActionTypes = {\r\n    SET_PLAYER_STATS: 'SET_PLAYER_STATS',\r\n    SET_COMPARISON_PLAYER_STATS: 'SET_COMPARISON_PLAYER_STATS',\r\n    SET_COMPARISON_ITEM_STATS: 'SET_COMPARISON_ITEM_STATS',\r\n}\r\n\r\nexport const setPlayerStats = (changeEvent) => {\r\n    return {\r\n        type: ActionTypes.SET_PLAYER_STATS,\r\n        changeEvent,\r\n    };\r\n};\r\n\r\nexport const setComparisonPlayerStats = (values) => {\r\n    return {\r\n        type: ActionTypes.SET_COMPARISON_PLAYER_STATS,\r\n        ...values,\r\n    };\r\n};\r\n\r\nexport const setComparisonItemStats = (values) => {\r\n    return {\r\n        type: ActionTypes.SET_COMPARISON_ITEM_STATS,\r\n        ...values,\r\n    };\r\n};","export const getComparisonItemStats = (state) => {\r\n    return state.comparisonStats.item;\r\n};\r\n\r\nexport const getComparisonPlayerStats = (state) => {\r\n    return state.comparisonStats.player;\r\n};\r\n\r\nexport const getPlayerStats = (state) => {\r\n    return state.playerStats;\r\n};","import { connect } from 'react-redux'\r\nimport StatForm from './ui/StatForm';\r\nimport { setPlayerStats } from '../state/actions';\r\nimport { getPlayerStats } from '../state/selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n    values: getPlayerStats(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    setStats: stats => dispatch(setPlayerStats(stats)),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(StatForm);","export default {\r\n    boss: { // Info from English MS2 Wiki, is datamined\r\n        fd: {\r\n            // Appears to be the higher def one, not lower def one on wiki. 23000011 has hidden HP stat that matches our hard mode FD\r\n            name: 'Pyrros Fard',\r\n            def: 681,\r\n            pmResis: 120,\r\n            critEvasion: 50,\r\n            evasion: 97,\r\n            luck: 0,\r\n        },\r\n        cdev: {\r\n            name: 'Devorak',\r\n            def: 681,\r\n            pmResis: 249,\r\n            critEvasion: 50,\r\n            evasion: 98,\r\n            luck: 0,\r\n        },\r\n        cmoc: {\r\n            name: 'Captain Moc',\r\n            def: 681,\r\n            pmResis: 249,\r\n            critEvasion: 50,\r\n            evasion: 98,\r\n            luck: 0,\r\n        },\r\n        cpap: {\r\n            name: 'Papulatus',\r\n            def: 936,\r\n            pmResis: 249,\r\n            critEvasion: 50,\r\n            evasion: 101,\r\n            luck: 0,\r\n        },\r\n        tdummy: {\r\n            name: 'Training Dummy',\r\n            def: 567,\r\n            pmResis: 90,\r\n            critEvasion: 50,\r\n            evasion: 87,\r\n            luck: 0\r\n        }\r\n    },\r\n    petBonusAtkMultiplier: 0.4, // Amount of pet bonus atk that affects your bonus atk, came from Saintone\r\n    bonusAtkCoefficient: { // Coefficient may different slightly depending on wep type, ignoring for now until we have more certain data\r\n        epic: { // From https://docs.google.com/document/d/1h3kmoDic7x8VldqJ2DxxXgwTI674Ft-riEKXY3SnJuU/edit\r\n            knight: 2,\r\n            wiz: 2.75,\r\n            archer: 2.75,\r\n            thief: 2.25,\r\n            rune: 2.75,\r\n            zerk: 2.75,\r\n            priest: 2,\r\n            hg: 2.75,\r\n            sin: 2.25,\r\n            sb: 2.75,\r\n            striker: 2.75,\r\n        },\r\n        legendary: { // Came from Saintsone\r\n            knight: 4,\r\n            wiz: 5.5,\r\n            archer: 5.5,\r\n            thief: 4.5,\r\n            rune: 5.5,\r\n            zerk: 5.5,\r\n            priest: 4,\r\n            hg: 5.5,\r\n            sin: 4.5,\r\n            sb: 5.5,\r\n            striker: 5.5,\r\n        }\r\n    },\r\n    mainStatToPMAtk: {\r\n        knight: 0.62,\r\n        wiz: 0.56,\r\n        archer: 0.62,\r\n        thief: 0.62,\r\n        rune: 0.62,\r\n        zerk: 0.62,\r\n        priest: 0.48,\r\n        hg: 0.62,\r\n        sin: 0.62,\r\n    },\r\n    buffs: {\r\n        sinCritBuffUptime: 17 / 60,\r\n    },\r\n};","import React from 'react';\r\nimport { getDamageDealt } from '../../util/algorithms';\r\n\r\nexport default class Results extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"results\">\r\n                Results:\r\n                <div>Your Damage: { getDamageDealt(this.props.playerStats) }</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import data from './data';\r\n\r\n// There's likely some sort of missing coefficient on their defense, as the final calculated number is ~4-5x less than what your dama ge is ingame\r\nexport const getDamageDealt = (stats) => {\r\n    console.log('stats is', stats);\r\n    try {\r\n        const bonusAtkCoefficient = data.bonusAtkCoefficient[stats.wepRarity][stats.class];\r\n        const totalDmg = stats.tDmg + stats.bDmg + stats.eDmg + stats.mrDmg;\r\n        const totalWepAtk = stats.wepAtk + ((stats.bAtk + (stats.pbAtk * data.petBonusAtkMultiplier)) * bonusAtkCoefficient);\r\n        const bossDef = data.boss[stats.dungeon].def;\r\n\r\n        const initialDmg = totalWepAtk * stats.pmAtk * (1 + (totalDmg / 100));\r\n        const piercingDmg = initialDmg / bossDef * (1 / Math.max(1 - (stats.pierce / 100), 0.7));\r\n\r\n        const damageDealt = piercingDmg * Math.min(1, ((1500 * (1 + (stats.pmPierce / 100)) - data.boss[stats.dungeon].pmResis) / 1500));\r\n\r\n        return damageDealt.toLocaleString('en');\r\n    } catch (e) {\r\n        console.error('getDamageDealt failed with error:', e);\r\n        return `ERROR`;\r\n    }\r\n};","import { connect } from 'react-redux'\r\nimport ResultsComponent from './ui/Results';\r\nimport { getPlayerStats } from '../state/selectors';\r\n\r\nconst mapStateToProps = state => ({\r\n    playerStats: getPlayerStats(state),\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n)(ResultsComponent);","import React from 'react';\r\n// import ComparisonPlayerStatForm from './components/ComparisonPlayerStatForm';\r\n// import ComparisonItemStatForm from './components/ComparisonItemStatForm';\r\nimport PlayerStatForm from './components/PlayerStatForm';\r\nimport Results from './components/Results';\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <PlayerStatForm />\r\n                {/* <ComparisonPlayerStatForm />\r\n                <ComparisonItemStatForm /> */}\r\n                <Results />\r\n            </>\r\n        );\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport { ActionTypes } from '../actions';\r\n\r\nconst comparisonStatsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SET_COMPARISON_ITEM_STATS:\r\n            return Object.assign({}, {\r\n                comparison: {\r\n                    ...state.comparison,\r\n                    item: {\r\n                        ...state.comparison.item,\r\n                        [action.changeEvent.target.name]: action.changeEvent.target.value,\r\n                    },\r\n                },\r\n            });\r\n        case ActionTypes.SET_COMPARISON_PLAYER_STATS:\r\n            return Object.assign({}, state, {\r\n                comparison: {\r\n                    ...state.comparison,\r\n                    player: {\r\n                        ...state.comparison.player,\r\n                        [action.changeEvent.target.name]: action.changeEvent.target.value,\r\n                    },\r\n                },\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst playerStatsReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.SET_PLAYER_STATS:\r\n            return Object.assign({}, state, {\r\n                ...state.playerStats,\r\n                [action.changeEvent.target.name]: action.changeEvent.target.value,\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexport const reducer = combineReducers({\r\n    comparisonStats: comparisonStatsReducer,\r\n    playerStats: playerStatsReducer,\r\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { reducer } from './state/reducers';\nimport { defaultState } from './util/constants';\n\nconst initialState = defaultState;\nconst store = createStore(reducer, initialState);\n\nReactDOM.render((\n    <Provider store={store}>\n        <App />\n    </Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}